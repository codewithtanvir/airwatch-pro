# Production Deployment Infrastructure
# Docker, Kubernetes, and cloud deployment for NASA TEMPO Air Quality System

apiVersion: v1
kind: Namespace
metadata:
  name: airwatch-enhanced
  labels:
    app: airwatch-enhanced
    environment: production

---
# Redis for caching and session storage
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: airwatch-enhanced
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: airwatch-enhanced
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379

---
# PostgreSQL for data storage
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: airwatch-enhanced
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: "airwatch"
        - name: POSTGRES_USER
          value: "airwatch"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: airwatch-enhanced
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432

---
# API Backend Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airwatch-api
  namespace: airwatch-enhanced
spec:
  replicas: 3
  selector:
    matchLabels:
      app: airwatch-api
  template:
    metadata:
      labels:
        app: airwatch-api
    spec:
      containers:
      - name: airwatch-api
        image: airwatch/api:latest
        ports:
        - containerPort: 3001
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: NASA_API_KEY
          valueFrom:
            secretKeyRef:
              name: nasa-secret
              key: api-key
        - name: TEMPO_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: nasa-secret
              key: tempo-token
        - name: EPA_API_KEY
          valueFrom:
            secretKeyRef:
              name: epa-secret
              key: api-key
        - name: WAQI_API_KEY
          valueFrom:
            secretKeyRef:
              name: waqi-secret
              key: api-key
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: sendgrid-key
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: twilio-sid
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: twilio-token
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: airwatch-api-service
  namespace: airwatch-enhanced
spec:
  selector:
    app: airwatch-api
  ports:
  - port: 3001
    targetPort: 3001
  type: ClusterIP

---
# Frontend Web Application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airwatch-frontend
  namespace: airwatch-enhanced
spec:
  replicas: 2
  selector:
    matchLabels:
      app: airwatch-frontend
  template:
    metadata:
      labels:
        app: airwatch-frontend
    spec:
      containers:
      - name: airwatch-frontend
        image: airwatch/frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: VITE_API_BASE_URL
          value: "https://api.airwatch.app"
        - name: VITE_NASA_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: nasa-secret
              key: client-id
        - name: VITE_NASA_REDIRECT_URI
          value: "https://airwatch.app/auth/callback"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: airwatch-frontend-service
  namespace: airwatch-enhanced
spec:
  selector:
    app: airwatch-frontend
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP

---
# NASA TEMPO Data Processor (Background Job)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo-processor
  namespace: airwatch-enhanced
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tempo-processor
  template:
    metadata:
      labels:
        app: tempo-processor
    spec:
      containers:
      - name: tempo-processor
        image: airwatch/tempo-processor:latest
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: NASA_API_KEY
          valueFrom:
            secretKeyRef:
              name: nasa-secret
              key: api-key
        - name: TEMPO_ACCESS_TOKEN
          valueFrom:
            secretKeyRef:
              name: nasa-secret
              key: tempo-token
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          exec:
            command:
            - node
            - health-check.js
          initialDelaySeconds: 60
          periodSeconds: 30

---
# Alert Distribution Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alert-distributor
  namespace: airwatch-enhanced
spec:
  replicas: 2
  selector:
    matchLabels:
      app: alert-distributor
  template:
    metadata:
      labels:
        app: alert-distributor
    spec:
      containers:
      - name: alert-distributor
        image: airwatch/alert-distributor:latest
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: SENDGRID_API_KEY
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: sendgrid-key
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: twilio-sid
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: notification-secret
              key: twilio-token
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"

---
# Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: airwatch-ingress
  namespace: airwatch-enhanced
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  tls:
  - hosts:
    - airwatch.app
    - api.airwatch.app
    secretName: airwatch-tls
  rules:
  - host: airwatch.app
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: airwatch-frontend-service
            port:
              number: 80
  - host: api.airwatch.app
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: airwatch-api-service
            port:
              number: 3001

---
# Horizontal Pod Autoscaler for API
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: airwatch-api-hpa
  namespace: airwatch-enhanced
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: airwatch-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# ConfigMap for monitoring and logging
apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-config
  namespace: airwatch-enhanced
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
    - job_name: 'airwatch-api'
      static_configs:
      - targets: ['airwatch-api-service:3001']
    - job_name: 'tempo-processor'
      static_configs:
      - targets: ['tempo-processor:3002']
    - job_name: 'alert-distributor'
      static_configs:
      - targets: ['alert-distributor:3003']

---
# Persistent Volume Claim for PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: airwatch-enhanced
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd